# Ultra-optimized multi-stage build
FROM python:3.11-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    build-base \
    gcc \
    musl-dev \
    linux-headers \
    git

WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Final stage with minimal base
FROM python:3.11-alpine

# Install only essential runtime dependencies
RUN apk add --no-cache \
    libstdc++ \
    && rm -rf /var/cache/apk/* \
    && adduser -D appuser

WORKDIR /app

# Copy Python packages from builder stage
COPY --from=builder /root/.local /home/appuser/.local

# Make sure scripts in .local are usable
ENV PATH=/home/appuser/.local/bin:$PATH

# Copy only necessary application files
COPY --chown=appuser:appuser app.py .
COPY --chown=appuser:appuser icpc_utils.py .
COPY --chown=appuser:appuser rag_infer.py .
COPY --chown=appuser:appuser rag_infer_stream.py .
COPY --chown=appuser:appuser icpc2.faiss .
COPY --chown=appuser:appuser icpc2_meta.json .
COPY --chown=appuser:appuser prompt_template.txt .
COPY --chown=appuser:appuser templates/ templates/

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 5000

# Run the application
CMD ["python", "app.py"]
